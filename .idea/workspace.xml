<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d5811ad6-b230-4da2-bbdf-16fdfb9eccef" name="Changes" comment="feat : annotation 용 handlerMapping 추가 &#10; &#10;- 기존에는 Controller interface 를 구현하고 있는 것만 handlerMapping 에 포함이 되었지만, 애노테이션 용 handlerMapping 도 추가되었다. (@Controller 로 되어있는 것도 찾을 수 있다.)">
      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/mvc/AnnotationHandlerAdapter.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/mvc/AnnotationHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/mvc/AnnotationHandler.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/mvc/AnnotationHandlerMapping.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/mvc/AnnotationHandlerMapping.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/mvc/DispatcherServlet.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/mvc/DispatcherServlet.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/mvc/HandlerMapping.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/mvc/HandlerMapping.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/mvc/RequestMappingHandlerMapping.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/mvc/RequestMappingHandlerMapping.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="mvc-practice" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="mvc-practice" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="mvc-practice" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
                <item name="build" type="c8890929:TasksNode$1" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Enum" />
        <option value="AnnotationType" />
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2HOvPrwmy2sZeO7TCN42OLo0Dqc" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/hyerin/IdeaProjects/mvc-practice/webapps/WEB-INF&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.lookFeel&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="org.example.mvc" />
      <recent name="org.example.view" />
      <recent name="org.example.controller" />
      <recent name="org.example.annotation" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/webapps/WEB-INF" />
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunManager" selected="Application.WebApplicationServer">
    <configuration name="WebApplicationServer" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.WebApplicationServer" />
      <module name="mvc-practice.main" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ReflectionTest.load" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;org.example.ReflectionTest.load&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <method v="2" />
    </configuration>
    <configuration name="ReflectionTest.showClass" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;org.example.ReflectionTest.showClass&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <method v="2" />
    </configuration>
    <configuration name="mvc-practice [build]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="build" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <method v="2" />
    </configuration>
    <configuration name="mvc-practice [clean]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="clean" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.mvc-practice [build]" />
        <item itemvalue="Gradle.mvc-practice [clean]" />
        <item itemvalue="Application.WebApplicationServer" />
        <item itemvalue="Gradle.ReflectionTest.load" />
        <item itemvalue="Gradle.ReflectionTest.showClass" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="d5811ad6-b230-4da2-bbdf-16fdfb9eccef" name="Changes" comment="" />
      <created>1668168925098</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1668168925098</updated>
      <workItem from="1668168928274" duration="350000" />
      <workItem from="1668169545933" duration="7618000" />
      <workItem from="1668421082708" duration="3164000" />
      <workItem from="1668601592264" duration="3569000" />
    </task>
    <task id="LOCAL-00001" summary="feat : @Controller, @Service, @RequestMapping 애노테이션을 만들어본다.&#10;&#10;- 애노테이션을 만든 후 해당 애노테이션들을 사용한 class 들을 조회하여 테스트해본다.">
      <created>1668170847197</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1668170847197</updated>
    </task>
    <task id="LOCAL-00002" summary="feat : 클레스타입 객체 가져오는 방법 3가지 테스트 해보기">
      <created>1668171427486</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1668171427487</updated>
    </task>
    <task id="LOCAL-00003" summary="feat : 프론트 컨트롤러 구현하기 실습&#10;&#10;- 요청들어오는 것을 DispatcherServlet 이 받아 controller 과 viewName 을 반환해주는 프론트 컨트롤러 패턴 구현">
      <created>1668421163715</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1668421163715</updated>
    </task>
    <task id="LOCAL-00004" summary="feat : HandlerAdapter 생성하여 ModelAndView를 반환&#10;&#10;- adapter를 생성하여 handler 하는 controller 가 무엇인지 찾고 실행시켜준 후 viewName 를 반환한다.">
      <created>1668602730154</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1668602730154</updated>
    </task>
    <task id="LOCAL-00005" summary="feat : annotation 용 handlerMapping 추가 &#10; &#10;- 기존에는 Controller interface 를 구현하고 있는 것만 handlerMapping 에 포함이 되었지만, 애노테이션 용 handlerMapping 도 추가되었다. (@Controller 로 되어있는 것도 찾을 수 있다.)">
      <created>1668603773733</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1668603773733</updated>
    </task>
    <option name="localTasksCounter" value="6" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="feat : @Controller, @Service, @RequestMapping 애노테이션을 만들어본다.&#10;&#10;- 애노테이션을 만든 후 해당 애노테이션들을 사용한 class 들을 조회하여 테스트해본다." />
    <MESSAGE value="feat : 클레스타입 객체 가져오는 방법 3가지 테스트 해보기" />
    <MESSAGE value="feat : 프론트 컨트롤러 실습" />
    <MESSAGE value="feat : 프론트 컨트롤러 구현하기 실습&#10;&#10;- 요청들어오는 것을 DispatcherServlet 이 받아 controller 과 viewName 을 반환해주는 프론트 컨트롤러 패턴 구현" />
    <MESSAGE value="feat : HandlerAdapter 생성하여 ModelAndView를 반환&#10;&#10;- adapter를 생성하여 handler 하는 controller 가 무엇인지 찾고 실행시켜준 후 viewName 를 반환한다." />
    <MESSAGE value="feat : annotation 용 handlerMapping 추가 &#10; &#10;- 기존에는 Controller interface 를 구현하고 있는 것만 handlerMapping 에 포함이 되었지만, 애노테이션 용 handlerMapping 도 추가되었다. (@Controller 로 되어있는 것도 찾을 수 있다.)" />
    <option name="LAST_COMMIT_MESSAGE" value="feat : annotation 용 handlerMapping 추가 &#10; &#10;- 기존에는 Controller interface 를 구현하고 있는 것만 handlerMapping 에 포함이 되었지만, 애노테이션 용 handlerMapping 도 추가되었다. (@Controller 로 되어있는 것도 찾을 수 있다.)" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/mvc_practice$WebApplicationServer.ic" NAME="WebApplicationServer Coverage Results" MODIFIED="1668172280256" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
      <FILTER>org.example.*</FILTER>
    </SUITE>
  </component>
</project>